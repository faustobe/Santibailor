// Generated by view binder compiler. Do not edit!
package it.faustobe.santibailor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import it.faustobe.santibailor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCerca;

  @NonNull
  public final Button buttonDebug;

  @NonNull
  public final TextInputEditText editTextDataFine;

  @NonNull
  public final TextInputEditText editTextDataInizio;

  @NonNull
  public final TextInputEditText editTextNome;

  @NonNull
  public final ProgressBar loadingMoreProgress;

  @NonNull
  public final RecyclerView recyclerViewRisultati;

  @NonNull
  public final TextView searchParamsSummary;

  @NonNull
  public final AutoCompleteTextView spinnerTipo;

  @NonNull
  public final TextView textViewNoResults;

  @NonNull
  public final TextView textViewRisultati;

  @NonNull
  public final TextView textViewTotalItems;

  private FragmentSearchBinding(@NonNull LinearLayout rootView, @NonNull Button buttonCerca,
      @NonNull Button buttonDebug, @NonNull TextInputEditText editTextDataFine,
      @NonNull TextInputEditText editTextDataInizio, @NonNull TextInputEditText editTextNome,
      @NonNull ProgressBar loadingMoreProgress, @NonNull RecyclerView recyclerViewRisultati,
      @NonNull TextView searchParamsSummary, @NonNull AutoCompleteTextView spinnerTipo,
      @NonNull TextView textViewNoResults, @NonNull TextView textViewRisultati,
      @NonNull TextView textViewTotalItems) {
    this.rootView = rootView;
    this.buttonCerca = buttonCerca;
    this.buttonDebug = buttonDebug;
    this.editTextDataFine = editTextDataFine;
    this.editTextDataInizio = editTextDataInizio;
    this.editTextNome = editTextNome;
    this.loadingMoreProgress = loadingMoreProgress;
    this.recyclerViewRisultati = recyclerViewRisultati;
    this.searchParamsSummary = searchParamsSummary;
    this.spinnerTipo = spinnerTipo;
    this.textViewNoResults = textViewNoResults;
    this.textViewRisultati = textViewRisultati;
    this.textViewTotalItems = textViewTotalItems;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cerca;
      Button buttonCerca = ViewBindings.findChildViewById(rootView, id);
      if (buttonCerca == null) {
        break missingId;
      }

      id = R.id.button_debug;
      Button buttonDebug = ViewBindings.findChildViewById(rootView, id);
      if (buttonDebug == null) {
        break missingId;
      }

      id = R.id.edit_text_data_fine;
      TextInputEditText editTextDataFine = ViewBindings.findChildViewById(rootView, id);
      if (editTextDataFine == null) {
        break missingId;
      }

      id = R.id.edit_text_data_inizio;
      TextInputEditText editTextDataInizio = ViewBindings.findChildViewById(rootView, id);
      if (editTextDataInizio == null) {
        break missingId;
      }

      id = R.id.edit_text_nome;
      TextInputEditText editTextNome = ViewBindings.findChildViewById(rootView, id);
      if (editTextNome == null) {
        break missingId;
      }

      id = R.id.loading_more_progress;
      ProgressBar loadingMoreProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingMoreProgress == null) {
        break missingId;
      }

      id = R.id.recycler_view_risultati;
      RecyclerView recyclerViewRisultati = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewRisultati == null) {
        break missingId;
      }

      id = R.id.search_params_summary;
      TextView searchParamsSummary = ViewBindings.findChildViewById(rootView, id);
      if (searchParamsSummary == null) {
        break missingId;
      }

      id = R.id.spinner_tipo;
      AutoCompleteTextView spinnerTipo = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTipo == null) {
        break missingId;
      }

      id = R.id.text_view_no_results;
      TextView textViewNoResults = ViewBindings.findChildViewById(rootView, id);
      if (textViewNoResults == null) {
        break missingId;
      }

      id = R.id.text_view_risultati;
      TextView textViewRisultati = ViewBindings.findChildViewById(rootView, id);
      if (textViewRisultati == null) {
        break missingId;
      }

      id = R.id.text_view_total_items;
      TextView textViewTotalItems = ViewBindings.findChildViewById(rootView, id);
      if (textViewTotalItems == null) {
        break missingId;
      }

      return new FragmentSearchBinding((LinearLayout) rootView, buttonCerca, buttonDebug,
          editTextDataFine, editTextDataInizio, editTextNome, loadingMoreProgress,
          recyclerViewRisultati, searchParamsSummary, spinnerTipo, textViewNoResults,
          textViewRisultati, textViewTotalItems);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
