// File creato il: 2024-08-08 21:08:46

// Contenuto di layout/fragment_home.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">

    <TextView
        android:id="@+id/data_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        android:textStyle="bold"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"/>

    <Button
        android:id="@+id/btn_tutte"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tutte"
        app:layout_constraintTop_toTopOf="@id/data_text_view"
        app:layout_constraintEnd_toStartOf="@id/btn_religiose" />

    <Button
        android:id="@+id/btn_religiose"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Religiose"
        app:layout_constraintTop_toTopOf="@id/data_text_view"
        app:layout_constraintEnd_toStartOf="@id/btn_laiche" />

    <Button
        android:id="@+id/btn_laiche"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Laiche"
        app:layout_constraintTop_toTopOf="@id/data_text_view"
        app:layout_constraintEnd_toEndOf="parent" />

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/ricorrenze_recycler_view"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toBottomOf="@id/btn_tutte"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

    <ProgressBar
        android:id="@+id/loading_indicator"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:visibility="gone"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

    <TextView
        android:id="@+id/empty_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Nessuna ricorrenza per oggi"
        android:visibility="gone"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>

// Contenuto di home/HomeFragment.java

package it.faustobe.santibailor.ui.home;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import java.util.Calendar;
import java.util.List;

import it.faustobe.santibailor.R;
import it.faustobe.santibailor.data.entities.RicorrenzaConTipo;
import it.faustobe.santibailor.viewmodel.RicorrenzaViewModel;

public class HomeFragment extends Fragment {

    private RicorrenzaViewModel ricorrenzaViewModel;
    private RecyclerView recyclerView;
    private RicorrenzaAdapter adapter;
    private boolean mostraSoloReligiose = false;
    private boolean mostraSoloLaiche = false;
    private int giornoCorrente;
    private int meseCorrente;

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View root = inflater.inflate(R.layout.fragment_home, container, false);

        recyclerView = root.findViewById(R.id.ricorrenze_recycler_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        adapter = new RicorrenzaAdapter();
        recyclerView.setAdapter(adapter);

        return root;
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        ricorrenzaViewModel = new ViewModelProvider(this).get(RicorrenzaViewModel.class);

        Calendar calendar = Calendar.getInstance();
        giornoCorrente = calendar.get(Calendar.DAY_OF_MONTH);
        meseCorrente = calendar.get(Calendar.MONTH) + 1; // Calendar.MONTH Ã¨ zero-based

        caricaRicorrenze();
        view.findViewById(R.id.btn_tutte).setOnClickListener(v -> mostraTutte());
        view.findViewById(R.id.btn_religiose).setOnClickListener(v -> mostraSoloReligiose());
        view.findViewById(R.id.btn_laiche).setOnClickListener(v -> mostraSoloLaiche());
    }

    private void caricaRicorrenze() {
        if (mostraSoloReligiose) {
            ricorrenzaViewModel.getRicorrenzeReligiose(giornoCorrente, meseCorrente).observe(getViewLifecycleOwner(), this::updateUI);
        } else if (mostraSoloLaiche) {
            ricorrenzaViewModel.getRicorrenzeLaiche(giornoCorrente, meseCorrente).observe(getViewLifecycleOwner(), this::updateUI);
        } else {
            ricorrenzaViewModel.getRicorrenzeDelGiorno(giornoCorrente, meseCorrente).observe(getViewLifecycleOwner(), this::updateUI);
        }
    }

    private void updateUI(List<RicorrenzaConTipo> ricorrenze) {
        adapter.setRicorrenze(ricorrenze);
        adapter.notifyDataSetChanged();
    }

    // Metodi per cambiare il filtro
    public void mostraTutte() {
        mostraSoloReligiose = false;
        mostraSoloLaiche = false;
        caricaRicorrenze();
    }

    public void mostraSoloReligiose() {
        mostraSoloReligiose = true;
        mostraSoloLaiche = false;
        caricaRicorrenze();
    }

    public void mostraSoloLaiche() {
        mostraSoloReligiose = false;
        mostraSoloLaiche = true;
        caricaRicorrenze();
    }

    private class RicorrenzaAdapter extends RecyclerView.Adapter<RicorrenzaAdapter.RicorrenzaViewHolder> {
        private List<RicorrenzaConTipo> ricorrenze;

        @NonNull
        @Override
        public RicorrenzaViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_ricorrenza, parent, false);
            return new RicorrenzaViewHolder(view);
        }

        @Override
        public void onBindViewHolder(@NonNull RicorrenzaViewHolder holder, int position) {
            RicorrenzaConTipo ricorrenza = ricorrenze.get(position);
            holder.bind(ricorrenza);
        }

        @Override
        public int getItemCount() {
            return ricorrenze != null ? ricorrenze.size() : 0;
        }

        public void setRicorrenze(List<RicorrenzaConTipo> ricorrenze) {
            this.ricorrenze = ricorrenze;
        }

        class RicorrenzaViewHolder extends RecyclerView.ViewHolder {
            private TextView nomeTextView;
            private TextView tipoTextView;

            RicorrenzaViewHolder(@NonNull View itemView) {
                super(itemView);
                nomeTextView = itemView.findViewById(R.id.nome_ricorrenza);
                tipoTextView = itemView.findViewById(R.id.tipo_ricorrenza);
            }

            void bind(RicorrenzaConTipo ricorrenza) {
                nomeTextView.setText(ricorrenza.ricorrenza.getNome());
                tipoTextView.setText(ricorrenza.tipoNome);
            }
        }
    }
}

